Q) Which are legal

A) class X {
  var x = 99;
}

B) void doStuff(var x) { }

C) void doStuff() {
  var x;
  x = 100;
}

D) void doStuff() {
  var x = 100;
}

E) void doStuff() {
  var x = { 1, 2, 3 };
}

Q) Which are legal:

   A) void doStuff() {
     var x = new int[]{ 1, 2, 3 };
   }
B) void doStuff() {
     var [] x = new int[]{ 1, 2, 3 };
   }
C) void doStuff() {
     var x = 99;
     x = "Hello";
   }

   D) void doStuff() {
     var x = 1, y = 2;
   }

   E)
   void doStuff() {
     try {
      // stuff happens
      } catch (var ex) {
      }
   }

Q)  A)
       for (var x = 0; x < 3; x++)
         System.out.println(x);
    B)
       try (var in = new FileReader("");
            var out = new FileWriter("")) {
       }
    C)
       var var = "var";

Q)   Which print "true"
   A) String s = "Hello";
      String t = "He";
      t += "llo";
      sout(s == t);

   B) String s = "Hello";
      String t = "He";
      t += "llo";
      sout(s.equals(t));

   C) StringBuilder s = new StringBuilder("Hello");
      StringBuilder t = new StringBuilder("He");
      t.append("llo");
      sout(s.equals(t));

   D) List<String> ls = List.of("Fred", "Jim");
      List<String> ls2 = new ArrayList<>(ls);
      sout(ls.equals(ls2));

   E) LocalDate ld = LocalDate.of(2021, 3, 29);
      LocalDate ld2 = LocalDate.of(2021, 3, 29);
      sout(ld.equals(ld2));

Q) Given
   class X {
     static String h = "Hello";
   }

Which are true?
     String s1 = "Hello";
     String s2 = new StringBuilder("Hello").toString();
     String s3 = s2.intern();

A) s1 == s2
B) s2 == s3
C) s1 == s3
D) X.h == s1

Q) Given
     void doStuff() throws IOException {};
     void doStuff2() throws FileNotFoundException {};
   And:
     void tryStuff() {
       try {
         doStuff();
         doStuff2();
       } enter code here {
         // handle both exceptions
       }
     }
   What can be inserted at "enter code here"
   to provide handling of exceptions from both
   methods?
   A) catch (IOException | FileNotFoundException e)
   B) catch (FileNotFoundException | IOException e)
   C) catch (FileNotFoundException e)
   D) catch (IOException e)
   E) finally

Q)   Given:
     public class Scr {
       static int x = -1;
       public static void main(String[] args) {
         new ScrSub().doStuff();
       }
     }
and:
     class ScrSub extends Scr {
       int x = 99;
       void doStuff() {
         System.out.print(x + ","); // line n1
         int x = 100;
         System.out.print(x + ",");
         System.out.print(Scr.x + ",");
       }
     }

A) Compilation fails at line n1
B) Exception at line n1
C) 99, 100, -1
D) 0, 100, 99
E) 0, 100, -1




